from datetime import datetime
from solve_tsp import *

distance_matrix2 = np.array([
        [0, 2, 6, 3, 6, 2, 8, 2,  20, 22], 
        [2, 0, 4, 3, 7, 2, 8, 2,  4,  21], 
        [6, 4, 0, 7, 3, 2, 8, 12, 10, 20], 
        [3, 3, 7, 0, 3, 2, 4, 12, 42, 18], 
        [6, 8, 3, 3, 0, 2, 8, 12, 41, 20],
        [6, 8, 3, 3, 0, 2, 8, 21, 2,  23],
        [6, 4, 0, 7, 3, 5, 8, 12, 4,  21],
        [3, 3, 7, 0, 3, 2, 6, 12, 4,  23],
        [3, 3, 7, 0, 3, 2, 6, 2,  4,  20],
        [3, 3, 7, 0, 3, 2, 6, 2,  4,  22] 
])

distance_matrix = np.array([
[0,	    20,	    9999,	9999,	9999,	9999,	9999,	29,	    9999,	9999,	9999,	29,	    37,	    9999,	9999,	9999,	9999,	9999],
[20,	0,	    25,	    9999,	9999,	9999,	9999,	28,	    9999,	9999,	9999,	39,	    9999,	9999,	9999,	9999,	9999,	9999],
[9999,	25,	    0,	    25,	    9999,	9999,	9999,	30,	    9999,	9999,	9999,	9999,	54,	    9999,	9999,	9999,	9999,	9999],
[9999,	9999,	25,	    0,	    39,	    32,	    42,	    9999,	23,	    33,	    9999,	9999,	9999,	56,	    9999,	9999,	9999,	9999],
[9999,	9999,	9999,	39,	    0,	    12,	    26,	    9999,	9999,	19,	    9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999],
[9999,	9999,	9999,	32,	    12,	    0,	    17, 	9999,	9999,	35,	    30,	    9999,	9999,	9999,	9999,	9999,	9999,	9999],
[9999,	9999,	9999,	42,	    26,	    17,	    0,	    9999,	9999,	9999,	38,	    9999,	9999,	9999,	9999,	9999,	9999,	9999],
[29,	28,	    30,	    9999,	9999,	9999,	9999,	0,	    9999,	9999,	9999,	25,	    22,	    9999,	9999,	9999,	9999,	9999],
[9999,	9999,	9999,	23,	    9999,	9999,	9999,	9999,	0,	    26,	    9999,	9999,	34,	    36,	    9999,	43,	    9999,	9999],
[9999,	9999,	9999,	33,	    19, 	35,	    9999,	9999,	26,	    0,	    24,	    9999,	9999,	30,	    19,	    9999,	9999,	9999],
[9999,	9999,	9999,	9999,	9999,	30, 	38,	    9999,	9999,	24,	    0,	    9999,	9999,	9999,	26,	    9999,	9999,	36],
[29,	39,	    9999,	9999,	9999,	9999,	9999,	25,	    9999,	9999,	9999,	0,	    27,	    9999,	9999,	43,	    9999,	9999],
[37,	9999,	54,	    9999,	9999,	9999,	9999,	22,	    34,	    9999,	9999,	27,	    0,	    24,	    9999,	19,	    9999,	9999],
[9999,	9999,	9999,	56,	    9999,	9999,	9999,	9999,	36, 	30,	    9999,	9999,	24,	    0,	    20,	    19,	    17,	    9999],
[9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	19,	    26,	    9999,	9999,	20,	    0,	    9999,	18,	    21],
[9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	43,	    19,	    19,	    9999,	0,	    27, 	9999],
[9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	17,	    18,	    26,	    0,  	15],
[9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	9999,	36,	    9999,	9999,	9999,	21,	    9999,	15, 	0]
])

timeBefore = datetime.now()

permutation, distance = solve_tsp_dynamic_programming(distance_matrix)

#tempo depois da execução
timeAfter = datetime.now()


timeBefore2 = datetime.now()

permutation2, distance2 = solve_tsp_brute_force(distance_matrix2)

#tempo depois da execução
timeAfter2 = datetime.now()


for i in range(len(permutation)):
    permutation[i] += 1

for i in range(len(permutation2)):
    permutation2[i] += 1

print("Programação dinâmica: ", permutation, distance, (timeAfter - timeBefore))
print("Força Bruta", permutation2, distance2, (timeAfter2 - timeBefore2))